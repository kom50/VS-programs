package puzzle;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import javax.swing.border.MatteBorder;

import graphics.GradientPanel;
import graphics.OnDrag;
import graphics.PButton;

public class PuzzleGame extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					PuzzleGame frame = new PuzzleGame();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */

	//
	private JPanel boardPanel = null;
	private JLabel box[];
	private ImageIcon icon[];
	JPanel board;
	JLabel lblTotalMoves;

	public PuzzleGame() {
		setUndecorated(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 600, 580);
		contentPane = new JPanel();
		contentPane.setInheritsPopupMenu(true);
		contentPane.setBackground(new Color(255, 255, 255));
		contentPane.setBorder(new MatteBorder(1, 1, 1, 1, (Color) new Color(0, 0, 0)));
		setContentPane(contentPane);
		setLocationByPlatform(false);
		contentPane.setLayout(null);

		// set Drag event
		new OnDrag(contentPane, PuzzleGame.this);


		// variables

		JLabel exitOp = new JLabel("X");
		exitOp.setForeground(Color.WHITE);
		exitOp.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				PuzzleGame.this.dispose();
			}

			@Override
			public void mouseEntered(MouseEvent e) {
				exitOp.setForeground(new Color(255, 6, 7));
			}

			@Override
			public void mouseExited(MouseEvent event) {
				exitOp.setForeground(Color.white);
			}
		});
		exitOp.setFont(new Font("Consolas", Font.BOLD, 22));
		exitOp.setBounds(574, 11, 16, 22);
		contentPane.add(exitOp);

		JPanel puzzle = new JPanel();
		puzzle.setBounds(68, 111, 428, 402);
		puzzle.setBackground(new Color(0, 0, 0, 0));
		puzzle.setLayout(null);

		PButton puzzle1 = new PButton("Puzzle 1");

		puzzle1.setBounds(137, 44, 200, 42);
		puzzle1.setStartColor(Color.magenta);
		puzzle1.setEndColor(Color.blue);
		puzzle.add(puzzle1);

		PButton puzzle2 = new PButton("Puzzle 2");
		puzzle2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				puzzle.setVisible(false);
				boardPanel.setVisible(true);
				for (int i = 0; i < icon.length; i++) {
					icon[i] = new ImageIcon("src/puzzle/Photo/list2/" + (1 + i) + ".jpg");
					box[i].setIcon(icon[i]);
				}
			}

		});
		puzzle2.setBounds(137, 97, 200, 42);
		puzzle2.setStartColor(Color.magenta);
		puzzle2.setEndColor(Color.blue);
		puzzle.add(puzzle2);

		PButton puzzle3 = new PButton("Puzzle 3");
		puzzle3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				puzzle.setVisible(false);
				boardPanel.setVisible(true);
				for (int i = 0; i < icon.length; i++) {
					icon[i] = new ImageIcon("src/puzzle/Photo/list3/" + (1 + i) + ".jpg");
					box[i].setIcon(icon[i]);
				}
			}
		});
		puzzle3.setBounds(137, 155, 200, 42);
		puzzle3.setStartColor(Color.magenta);
		puzzle3.setEndColor(Color.blue);
		puzzle.add(puzzle3);

		PButton puzzle4 = new PButton("Puzzle 4");
		puzzle4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				puzzle.setVisible(false);
				boardPanel.setVisible(true);
				for (int i = 0; i < icon.length; i++) {
					icon[i] = new ImageIcon("src/puzzle/Photo/list4/" + (1 + i) + ".jpg");
					box[i].setIcon(icon[i]);
				}
			}
		});
		puzzle4.setBounds(137, 211, 200, 42);
		puzzle4.setStartColor(Color.magenta);
		puzzle4.setEndColor(Color.blue);
		puzzle.add(puzzle4);

		PButton puzzle5 = new PButton("Puzzle 5");
		puzzle5.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				puzzle.setVisible(false);
				boardPanel.setVisible(true);
				for (int i = 0; i < icon.length; i++) {
					icon[i] = new ImageIcon("src/puzzle/Photo/list5/" + (1 + i) + ".jpg");
					box[i].setIcon(icon[i]);
				}
			}
		});
		puzzle5.setBounds(137, 264, 200, 42);
		puzzle5.setStartColor(Color.magenta);
		puzzle5.setEndColor(Color.blue);
		puzzle.add(puzzle5);

		PButton puzzle6 = new PButton("Puzzle 6");
		puzzle6.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				puzzle.setVisible(false);
				boardPanel.setVisible(true);
				for (int i = 0; i < icon.length; i++) {
					icon[i] = new ImageIcon("src/puzzle/Photo/list6/" + (1 + i) + ".jpg");
					box[i].setIcon(icon[i]);
				}
			}
		});
		puzzle6.setBounds(137, 321, 200, 42);
		puzzle6.setStartColor(Color.magenta);
		puzzle6.setEndColor(Color.blue);
		puzzle.add(puzzle6);

		contentPane.add(puzzle);

		// Board
		boardPanel = new JPanel();
		boardPanel.setVisible(false);
		boardPanel.setAutoscrolls(true);
		boardPanel.setLayout(null);
		boardPanel.setBackground(new Color(255, 255, 255));
		boardPanel.setBounds(40, 111, 495, 379);
		contentPane.add(boardPanel);
		boardPanel.validate();

		board = new JPanel();
		board.setBounds(110, 43, 301, 301);
		boardPanel.add(board);
		board.setBorder(new MatteBorder(1, 1, 1, 1, (Color) Color.BLUE));
		board.setLayout(null);

		JLabel lblRefresh = new JLabel("");
		lblRefresh.setBackground(new Color(255, 255, 255));
		lblRefresh.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent e) {
				lblRefresh.setIcon(	new ImageIcon("G:\\VS programs\\Java 2021\\Swing Programs\\src\\Image\\refreshblue.png"));
			}
			@Override
			public void mouseExited(MouseEvent e) {
				super.mouseExited(e);
				lblRefresh.setIcon(	new ImageIcon("G:\\VS programs\\Java 2021\\Swing Programs\\src\\Image\\refresh_24px.png"));
			}
		});
		lblRefresh.setIcon(new ImageIcon("G:\\VS programs\\Java 2021\\Swing Programs\\src\\Image\\refresh_24px.png"));
		lblRefresh.setBounds(248, 354, 30, 25);
		boardPanel.add(lblRefresh);

		// board
		box = new JLabel[9];
		icon = new ImageIcon[9];
		int locX[] = { 0, 100, 200, 0, 100, 200, 0, 100, 200 }, locY[] = { 0, 0, 0, 100, 100, 100, 200, 200, 200 };

		for (int i = 0; i < icon.length; i++) {
			box[i] = new JLabel();

			// add label name for ActionButton class
			box[i].setName("b" + i);
			box[i].setSize(100, 100);
			box[i].setBorder(new MatteBorder(1, 1, 1, 1, Color.blue));
			box[i].setLocation(locX[i], locY[i]);
		}

		for (int i = 0; i < box.length; i++)
			board.add(box[i]);
		// Last image 
		box[8].setVisible(false);

		// board End

		JLabel label = new JLabel();
		label.setBackground(new Color(255, 255, 255));
		label.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				puzzle.setVisible(true);
				boardPanel.setVisible(false);
			}

			@Override
			public void mouseEntered(MouseEvent e) {
				label.setIcon(new ImageIcon("G:\\VS programs\\Java 2021\\Swing Programs\\src\\Image\\backRedimg.png"));
			}

			@Override
			public void mouseExited(MouseEvent event) {
				label.setIcon(new ImageIcon("G:\\VS programs\\Java 2021\\Swing Programs\\src\\Image\\backImg.png"));
			}
		});

		label.setIcon(new ImageIcon("G:\\VS programs\\Java 2021\\Swing Programs\\src\\Image\\backImg.png"));
		label.setBounds(0, 164, 48, 48);
		boardPanel.add(label);

		lblTotalMoves = new JLabel("Total Moves : 0");
		lblTotalMoves.setBackground(Color.WHITE);
		lblTotalMoves.setForeground(Color.BLUE);
		lblTotalMoves.setFont(new Font("Consolas", Font.BOLD, 18));
		lblTotalMoves.setBounds(110, 22, 175, 25);
		boardPanel.add(lblTotalMoves);

		//

		JLabel lblPhotoPuzzleGame = new JLabel("Photo Puzzle Game");
		lblPhotoPuzzleGame.setBorder(new MatteBorder(0, 0, 2, 0, (Color) Color.BLUE));
		lblPhotoPuzzleGame.setHorizontalTextPosition(SwingConstants.CENTER);
		lblPhotoPuzzleGame.setHorizontalAlignment(SwingConstants.CENTER);
		lblPhotoPuzzleGame.setForeground(Color.BLUE);
		lblPhotoPuzzleGame.setFont(new Font("Consolas", Font.BOLD, 32));
		lblPhotoPuzzleGame.setBounds(25, 11, 495, 62);
		contentPane.add(lblPhotoPuzzleGame);

		JLabel lblDevelopedBy = new JLabel("Developed By : Om prakash kumar");
		lblDevelopedBy.setHorizontalTextPosition(SwingConstants.CENTER);
		lblDevelopedBy.setHorizontalAlignment(SwingConstants.CENTER);
		lblDevelopedBy.setForeground(Color.BLUE);
		lblDevelopedBy.setFont(new Font("Consolas", Font.BOLD, 19));
		lblDevelopedBy.setBorder(new MatteBorder(0, 0, 2, 0, (Color) Color.BLUE));
		lblDevelopedBy.setBounds(68, 533, 467, 62);
		contentPane.add(lblDevelopedBy);

		JLabel backgroundImg = new JLabel("");
		backgroundImg.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
		backgroundImg.setIcon(new ImageIcon("C:\\Users\\Omkarthik\\Pictures\\puzzle1.jpg"));
		backgroundImg.setBounds(0, 0, 600, 580);
		contentPane.add(backgroundImg);

		puzzle1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				puzzle.setVisible(false);
				boardPanel.setVisible(true);
				for (int i = 0; i < icon.length; i++) {
					icon[i] = new ImageIcon("src/puzzle/Photo/list1/" + (1 + i) + ".jpg");
					box[i].setIcon(icon[i]);
				}
			}
		});

		// ADD ACTION ON buttons
		ActionButton actionButton = new ActionButton();
		actionButton.addButton(box);
		actionButton.addRefreshButton(lblRefresh);
		actionButton.addMoveLabel(lblTotalMoves);
		
	

		contentPane.validate();
		this.validate();
	}
}
