import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

import javax.swing.JTextField;
//This class is use to create placeholder textField in java Swing
public class HintTextField extends JTextField implements FocusListener{
   
   private static final long serialVersionUID = 1L;
   boolean showHint = true;
   String hint = new String();
   
   boolean isPasswordField = false;
   char echoChar;
   ArrayList<Character> pass = new ArrayList<>();
   String text = new String();
   
   public HintTextField(String hint) {
	   super(hint);
	   this.hint = hint;
	   this.showHint = true;
	   this.echoChar ='#';
	   super.addFocusListener(this);
	   super.setForeground(Color.LIGHT_GRAY);
   }

	@Override
	public void focusGained(FocusEvent e) {
		if(this.getText().isEmpty()) {
			super.setText("");
			showHint = false;
		}
		
	}
	
	
	public void setPasswordField(boolean b) {
		this.isPasswordField = b;
		if (isPasswordField) {
			this.addKeyListener(new KeyAdapter() {
				 public void keyReleased(KeyEvent event) {
					 event.setKeyChar(echoChar); // set key char 
					 text += event.getKeyChar();  // then get character and add in text string
					 
					 String str = HintTextField.this.getText();
					 pass.add(str.charAt(str.length() - 1));  // add last input character in password arrayList
					
					 String p = "";
					 for(Character pp : pass)
						 p += pp;
					 
					 System.out.println(text+"  "+str+" : "+pass+" Password :- "+p);
					 HintTextField.this.setText(text);
				 }
			});
		}
	}
	public void setEchoChar(char ch) {
		this.echoChar = ch;
	}
	
	public char getEchoChar() { return this.echoChar; }
	
	public boolean isPasswordField() {
		return isPasswordField;
	}
	@Override
	public void focusLost(FocusEvent e) {
		if(this.getText().isEmpty()) {
			this.setText(hint);
			showHint = true;
		}
		if(!showHint) {
			super.setForeground(Color.black);
		}else {
			super.setForeground(Color.lightGray);
		}
	}
	
	@Override
	  public String getText() {
	    return showHint ? "" : super.getText();
	  }
}
