package animation;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.border.EmptyBorder;
import javax.swing.border.MatteBorder;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class HideShow extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
//	private final Action action = new SwingAction();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					HideShow frame = new HideShow();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	Timer timer;
	int initHeight;
	boolean flag = true;
	public HideShow() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 657, 460);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel panel = new JPanel();
		panel.setBackground(Color.MAGENTA);
		panel.setBounds(130, 53, 353, 181);
		contentPane.add(panel);
		
		initHeight = panel.getHeight();
		ActionListener action = new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println("Timer is running...");
				if(flag) {
					panel.setSize(panel.getWidth(), panel.getHeight() - 1);
					if(panel.getHeight() == 0)
					  flag = false;
				}else {
					panel.setSize(panel.getWidth(), panel.getHeight() + 1);
					if(panel.getHeight() == initHeight)
						flag = true;
				}
				if(panel.getHeight() == 0 || panel.getHeight() == initHeight) {
					timer.stop();
					System.out.println("Timer is stoped...");
				}
			}
		};
		timer = new Timer(10, action);
		JButton btnHide = new JButton("Hide");
		btnHide.addMouseListener(new MouseAdapter() {
			@Override
			public void mousePressed(MouseEvent e) {
				btnHide.setBorder(new MatteBorder(0, 3, 0, 0, Color.white));
			}
			@Override
			public void mouseReleased(MouseEvent e) {
				btnHide.setBorder(new MatteBorder(0, 0, 0, 0, Color.white));
				
			}
		});
		btnHide.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				timer.start();			
				
			}
		});
		
		
		btnHide.setFocusable(false);
		btnHide.setBorder(null);
		btnHide.setBackground(Color.BLUE);
		btnHide.setBounds(254, 309, 114, 40);
		contentPane.add(btnHide);
	}

}
